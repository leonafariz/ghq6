{
  "name": "ghq A",
  "nodes": [
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.body.pesan }}",
        "options": {
          "systemMessage": "Berikut versi yang sudah diperbaiki, mengacu ke format JSON yang benar dari prompt awal:\n\n---\n\nYou are Libria AI, the library registration assistant.\n\n‚ö†Ô∏è ALWAYS reply in the following JSON format, WITHOUT ANY TEXT OUTSIDE IT:\n\n{\n\"nama\": \"\",\n\"email\": \"\",\n\"phone\": \"\",\n\"address\": \"\",\n\"status\\_login\": \"\",\n\"respond\": \"\"\n}\n\nüìå Strict rules:\n\n* Fill in each field according to the user's information.\n* If any field is missing from the user's input, fill in an empty string: \"\".\n* If the `nama`, `email`, `phone`, and `address` strings are all complete and valid, then:\n\n  * `status_login`: \"berhasil\"\n  * The `respond` field should contain 2‚Äì3 sentences:\n\n    * Use a relaxed, friendly, and enthusiastic tone.\n    * always use English for \"respond\"\n    * If this is your first interaction, introduce yourself as Libria AI.\n* If the user asks a question unrelated to registration, answer it as best you can, and add the disclaimer:\n  *\"Aku sebenarnya dirancang khusus buat bantu proses pendaftaran perpustakaan yaa! ‚ú®\"*\n\n  * After that, **always redirect** them back to the data request process (asking for `nama`, `email`, etc.).\n\nüö´ No text outside of the JSON is allowed. Responses must begin and end with `{}`.\n"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.1,
      "position": [
        160,
        16
      ],
      "id": "588a9a11-239c-498f-b6f0-3a4a98e9a926",
      "name": "AI Agent"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "chatgpt-4o-latest",
          "mode": "list",
          "cachedResultName": "chatgpt-4o-latest"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        160,
        224
      ],
      "id": "d1d80617-1e78-4ff9-9a67-c0a30df36ee5",
      "name": "OpenAI Chat Model",
      "credentials": {
        "openAiApi": {
          "id": "tDj2EjR3OZcLDGnp",
          "name": "OpenAi account 3"
        }
      }
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "ghq6",
        "responseMode": "responseNode",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        16,
        16
      ],
      "id": "beb21236-6e5f-4ae4-be75-82e1fc7f3f64",
      "name": "Webhook",
      "webhookId": "39099d1e-d598-441c-bb88-0f7dd89217d1"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.4,
      "position": [
        816,
        144
      ],
      "id": "cab3e30e-504f-4ead-a0a8-a316a0883988",
      "name": "Respond to Webhook"
    },
    {
      "parameters": {
        "jsCode": "const outputStr = $json[\"output\"];  // ini field tempat GPT naruh JSON-nya\n\ntry {\n  const parsed = JSON.parse(outputStr);\n  return [{ json: parsed }];\n} catch (err) {\n  return [{ json: { error: \"Invalid JSON\", raw: outputStr } }];\n}"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        464,
        16
      ],
      "id": "9a56f84d-0cc4-42e1-99cf-6c0f85b6b792",
      "name": "Code"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "ebb17734-efe2-44eb-a3ab-1fd40c048ff6",
              "leftValue": "={{ $json.nama }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            },
            {
              "id": "717ba87c-531e-4c3a-888f-0f58591d0de0",
              "leftValue": "={{ $json.email }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            },
            {
              "id": "78e55753-4aea-4edd-9193-1985b30adf96",
              "leftValue": "={{ $json.telepon }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            },
            {
              "id": "9332f725-c482-4a59-bd7b-52cb5b472191",
              "leftValue": "={{ $json.alamat }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        624,
        -32
      ],
      "id": "1340bb18-e9c4-4fee-81c0-9c6defeca48d",
      "name": "If"
    },
    {
      "parameters": {
        "tableId": "pendaftaran",
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "nama",
              "fieldValue": "={{ $json.nama }}"
            },
            {
              "fieldId": "email",
              "fieldValue": "={{ $json.email }}"
            },
            {
              "fieldId": "telepon",
              "fieldValue": "={{ $json.telepon }}"
            },
            {
              "fieldId": "alamat",
              "fieldValue": "={{ $json.alamat }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        816,
        -32
      ],
      "id": "6fefba77-31a8-42e9-9f5a-93de6546e1c5",
      "name": "Create a row",
      "credentials": {
        "supabaseApi": {
          "id": "bQW7R9mjRx9vPjPF",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $('Webhook').item.json.headers }}",
        "contextWindowLength": 20
      },
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [
        288,
        208
      ],
      "id": "148aabe0-5841-4f88-875a-14676c849e0a",
      "name": "Simple Memory"
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "{\n  \"status_login\": \"berhasil\",\n  \"respond\": \"Horeee! Login kamu berhasil! üöÄ\"\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.4,
      "position": [
        1024,
        -32
      ],
      "id": "575986ba-0032-4f0a-bbe2-cf400fb272cc",
      "name": "Respond to Webhook1"
    }
  ],
  "pinData": {},
  "connections": {
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Webhook": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "Create a row",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Respond to Webhook",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Simple Memory": {
      "ai_memory": [
        [
          {
            "node": "AI Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Create a row": {
      "main": [
        [
          {
            "node": "Respond to Webhook1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "3580d9f1-47ce-4ad0-b92c-ea0ac5c637ad",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "9e547c68c8d99974ca85452a0465f5e4c27dcbb57241ac95e7fe8a70bd991b72"
  },
  "id": "kG8AuDfFD9CyzfKz",
  "tags": []
}